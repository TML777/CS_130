(1)-(3)
{"code":"LDUR X0, [X3, #0]\nLDUR X1, [X3, #8]\nLoop0: CBZ X0, ExitLoop0\nLSR X0, X0, #1\nADDI X4, X4, #1\nB Loop0\nExitLoop0:\n\nLoop1: CBZ X1, ExitLoop1\nLSR X1, X1, #1\nADDI X5, X5, #1\nB Loop1\nExitLoop1:\n\nLDUR X0, [X3, #0]\nLDUR X1, [X3, #8]\nADDI X6, X6, #1\n\nLoop2: CBZ X1, ExitLoop2\nAND X7, X1, X6\nCBZ X7, DontADD\nSUBS XZR, X0, XZR\nB.LT Subt\nADD X2, X2, X0\nB DontADD\nSubt:\nSUB X2, X2, X0\nDontADD:\nLSL X0, X0, #1\nLSR X1, X1, #1\nB Loop2\nExitLoop2:","registers":"X0 0, X1 0, X3 4000, XZR 0","memory":"4000 2147483647, 4008 4294967295"}

(4)-(6)
{"code":"LDUR X0, [X3, #0]\nLDUR X1, [X3, #8]\nLoop0: CBZ X0, ExitLoop0\nLSR X0, X0, #1\nADDI X4, X4, #1\nB Loop0\nExitLoop0:\n\nLoop1: CBZ X1, ExitLoop1\nLSR X1, X1, #1\nADDI X5, X5, #1\nB Loop1\nExitLoop1:\n\nLDUR X0, [X3, #0]\nLDUR X1, [X3, #8]\nADDI X6, X6, #1\n\nLoop2: CBZ X1, ExitLoop2\nAND X7, X1, X6\nCBZ X7, DontADD\nADD X2, X2, X0\nDontADD:\nLSL X0, X0, #1\nLSR X1, X1, #1\nB Loop2\nExitLoop2:","registers":"X0 0, X1 0, X3 4000, XZR 0","memory":"4000 9876543210, 4008 1234567890"}

(7) Yes the result is correct.
(8) The result isn't correct because it's a negative, however if we look at a binary number then the result is correct. (The result in binary is equal to what the actual product is in binary).
